// <auto-generated />
using Event.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event.Migrations.EventDb
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20230923024504_IdentityNew")]
    partial class IdentityNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Event.Models.Domain.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GroupAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChallengesAndRisks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCityOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCompetitorsInMarket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupDurationOfRun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupFieldStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupFinishedPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupGeographicalArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupGrowHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupHaveConnectionToOther")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupIdeaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupInnovativenessOfTheIdea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupIntellectualProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupLastDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupProjectProgress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupRelatedTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupTargetSociety")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupTeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Event.Models.Domain.GroupProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupPrJobLeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPrPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPrSeller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPrStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPrTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupPrTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupProjects");
                });

            modelBuilder.Entity("Event.Models.Domain.GroupUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("GroupUserCityOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupUserDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupUserJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupUserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupUsers");
                });

            modelBuilder.Entity("Event.Models.Domain.GroupProject", b =>
                {
                    b.HasOne("Event.Models.Domain.Group", "ParentGroup")
                        .WithMany("GroupProjects")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("Event.Models.Domain.GroupUser", b =>
                {
                    b.HasOne("Event.Models.Domain.Group", "ParentGroup")
                        .WithMany("GroupUsers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentGroup");
                });

            modelBuilder.Entity("Event.Models.Domain.Group", b =>
                {
                    b.Navigation("GroupProjects");

                    b.Navigation("GroupUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
